{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport PcLayout from \"../components/layout\";\nimport commProps from \"./common/commProps\";\n\nvar debug = require('debug')('app:App');\n\nvar Layout = /*#__PURE__*/function (_Component) {\n  _inherits(Layout, _Component);\n\n  var _super = _createSuper(Layout);\n\n  function Layout() {\n    _classCallCheck(this, Layout);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Layout, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return __jsx(PcLayout, null, children);\n    }\n  }]);\n\n  return Layout;\n}(Component);\n\nvar InitApp = /*#__PURE__*/function (_App) {\n  _inherits(InitApp, _App);\n\n  var _super2 = _createSuper(InitApp);\n\n  function InitApp() {\n    _classCallCheck(this, InitApp);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(InitApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps; // Component代指页面组件，就是pages下面的页面组件，将getInitialProps中pageProps传递给每个页面\n\n      return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", null, \"Demo\"), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: \"Demo\"\n      }), __jsx(\"meta\", {\n        name: \"description\",\n        content: \"Demo\"\n      })), __jsx(Component, pageProps));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps, _commProps, isMobile;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n\n                /**\n                 * 进入匹配的路由组件，判断是服务端渲染还是客户端渲染\n                 * 组件的公共数据往后透传_document和对应的app\n                 * 命令路由的组件和app之间共享props\n                 * 如果页面有getInitialProps函数，要先执行页面的getInitialProps，然后当做pageProps传递给页面\n                 */\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                if (ctx && !ctx.req) {\n                  //客户端执行\n                  debug('Exce In %s', 'client');\n                } else {\n                  //服务端执行\n                  debug('Exce In is %s', 'server');\n                }\n                /**\n                 * 公共属性获取\n                 * @type {string}\n                 */\n\n\n                _commProps = commProps(ctx), isMobile = _commProps.isMobile;\n                pageProps.isMobile = isMobile;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return InitApp;\n}(App);\n\nexport default InitApp;","map":null,"metadata":{},"sourceType":"module"}