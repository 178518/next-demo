{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/yun.zhao/workspace/with-polyfills/pages/_app.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport withReduxStore from \"../lib/with-redux-store\";\nimport { Provider } from 'react-redux';\nimport PcLayout from \"../components/layout\";\nimport commProps from \"./common/commProps\";\n\nvar debug = require('debug')('app:App');\n\nvar Layout = /*#__PURE__*/function (_Component) {\n  _inherits(Layout, _Component);\n\n  var _super = _createSuper(Layout);\n\n  function Layout() {\n    _classCallCheck(this, Layout);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Layout, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return __jsx(PcLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, children);\n    }\n  }]);\n\n  return Layout;\n}(Component);\n\nvar InitApp = /*#__PURE__*/function (_App) {\n  _inherits(InitApp, _App);\n\n  var _super2 = _createSuper(InitApp);\n\n  function InitApp() {\n    _classCallCheck(this, InitApp);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(InitApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          reduxStore = _this$props.reduxStore; // Component代指页面组件，就是pages下面的页面组件，将getInitialProps中pageProps传递给每个页面\n\n      return __jsx(Provider, {\n        store: reduxStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \"\\u5C0F\\u76FE\\u5B89\\u5168\"), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: \"\\u540C\\u76FE\\u53CD\\u6B3A\\u8BC8,\\u5B89\\u5168\\u53CD\\u6B3A\\u8BC8,\\u53CD\\u6B3A\\u8BC8\\u670D\\u52A1,\\u53CD\\u6B3A\\u8BC8\\u4EA7\\u54C1,\\u5185\\u5BB9\\u5B89\\u5168\\u4FDD\\u62A4,\\u63A5\\u53E3\\u5B89\\u5168\\u4FDD\\u62A4,\\u667A\\u80FD\\u9A8C\\u8BC1\\u7801,\\u8BBE\\u5907\\u6307\\u7EB9,IP\\u753B\\u50CF,\\u6CE8\\u518C\\u767B\\u5F55\\u4FDD\\u62A4,\\u652F\\u4ED8\\u5B89\\u5168\\u4FDD\\u62A4,\\u8425\\u9500\\u6D3B\\u52A8\\u4FDD\\u62A4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }), __jsx(\"meta\", {\n        name: \"description\",\n        content: \"\\u540C\\u76FE\\u79D1\\u6280\\u53CD\\u6B3A\\u8BC8\\u5B89\\u5168\\u670D\\u52A1\\uFF0C\\u4E3A\\u4F01\\u4E1A\\u63D0\\u4F9B\\u4E1A\\u52A1\\u5B89\\u5168/\\u5185\\u5BB9\\u5B89\\u5168/\\u98CE\\u63A7\\u6570\\u636E\\u53CA\\u98CE\\u63A7\\u5DE5\\u5177\\uFF0C\\u6D89\\u53CA\\u7684\\u4E1A\\u52A1\\u573A\\u666F\\u5305\\u62EC\\uFF1A\\u6CE8\\u518C\\u767B\\u5F55\\u4FDD\\u62A4/\\u5185\\u5BB9\\u5B89\\u5168\\u68C0\\u6D4B\\u8FC7\\u6EE4/\\u63A5\\u53E3\\u5B89\\u5168\\u4FDD\\u62A4/\\u4EA4\\u6613\\u652F\\u4ED8\\u4FDD\\u62A4/\\u5185\\u5BB9\\u5B89\\u5168\\u68C0\\u6D4B\\u8FC7\\u6EE4\\u7B49\\u3002\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      })), __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, router, ctx, pageProps, _commProps, isMobile;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n\n                /**\n                 * 进入匹配的路由组件，判断是服务端渲染还是客户端渲染\n                 * 组件的公共数据往后透传_document和对应的app\n                 * 命令路由的组件和app之间共享props\n                 * 如果页面有getInitialProps函数，要先执行页面的getInitialProps，然后当做pageProps传递给页面\n                 */\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                if (ctx && !ctx.req) {\n                  //客户端执行\n                  debug('Exce In %s', 'client');\n                } else {\n                  //服务端执行\n                  debug('Exce In is %s', 'server');\n                }\n                /**\n                 * 公共属性获取\n                 * @type {string}\n                 */\n\n\n                _commProps = commProps(ctx), isMobile = _commProps.isMobile;\n                pageProps.isMobile = isMobile;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return InitApp;\n}(App);\n\nexport default _c = withReduxStore(InitApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/yun.zhao/workspace/with-polyfills/pages/_app.jsx"],"names":["App","React","Component","Head","withReduxStore","Provider","PcLayout","commProps","debug","require","Layout","children","props","InitApp","pageProps","reduxStore","router","ctx","getInitialProps","req","isMobile"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,cAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,SAAjB,CAAd;;IAEMC,M;;;;;;;;;;;;;6BACK;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEP,aAAQ,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWA,QAAX,CAAR;AACD;;;;EAJkBT,S;;IAOfW,O;;;;;;;;;;;;;6BAiCK;AAAA,wBACsC,KAAKD,KAD3C;AAAA,UACCV,SADD,eACCA,SADD;AAAA,UACYY,SADZ,eACYA,SADZ;AAAA,UACuBC,UADvB,eACuBA,UADvB,EAGP;;AACA,aAAQ,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,6XAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC,8eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,EAME,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,CADM,CAAR;AAUD;;;;;;;;;;;AA9C8BZ,gBAAAA,S,QAAAA,S,EAAWc,M,QAAAA,M,EAAQC,G,QAAAA,G;;AAChD;;;;;;AAMIH,gBAAAA,S,GAAY,E;;qBAEZZ,SAAS,CAACgB,e;;;;;;uBACMhB,SAAS,CAACgB,eAAV,CAA0BD,GAA1B,C;;;AAAlBH,gBAAAA,S;;;AAGF,oBAAIG,GAAG,IAAI,CAACA,GAAG,CAACE,GAAhB,EAAqB;AACnB;AACAX,kBAAAA,KAAK,CAAC,YAAD,EAAe,QAAf,CAAL;AACD,iBAHD,MAGO;AACL;AACAA,kBAAAA,KAAK,CAAC,eAAD,EAAkB,QAAlB,CAAL;AACD;AAED;;;;;;6BAIqBD,SAAS,CAACU,GAAD,C,EAAtBG,Q,cAAAA,Q;AAERN,gBAAAA,SAAS,CAACM,QAAV,GAAqBA,QAArB;iDAEO;AAAEN,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EA9BWd,G;;AAkDtB,oBAAeI,cAAc,CAACS,OAAD,CAA7B","sourcesContent":["import App from 'next/app';\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport withReduxStore from '../lib/with-redux-store';\nimport { Provider } from 'react-redux';\nimport PcLayout from 'components/layout';\nimport commProps from './common/commProps';\n\nconst debug = require('debug')('app:App');\n\nclass Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (<PcLayout>{children}</PcLayout>);\n  }\n}\n\nclass InitApp extends App {\n  static async getInitialProps({ Component, router, ctx }) {\n    /**\n     * 进入匹配的路由组件，判断是服务端渲染还是客户端渲染\n     * 组件的公共数据往后透传_document和对应的app\n     * 命令路由的组件和app之间共享props\n     * 如果页面有getInitialProps函数，要先执行页面的getInitialProps，然后当做pageProps传递给页面\n     */\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    if (ctx && !ctx.req) {\n      //客户端执行\n      debug('Exce In %s', 'client');\n    } else {\n      //服务端执行\n      debug('Exce In is %s', 'server');\n    }\n\n    /**\n     * 公共属性获取\n     * @type {string}\n     */\n    const { isMobile } = commProps(ctx);\n\n    pageProps.isMobile = isMobile;\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, reduxStore } = this.props;\n\n    // Component代指页面组件，就是pages下面的页面组件，将getInitialProps中pageProps传递给每个页面\n    return (<Provider store={reduxStore}>\n      <Layout>\n        <Head>\n          <title>小盾安全</title>\n          <meta name=\"keywords\" content=\"同盾反欺诈,安全反欺诈,反欺诈服务,反欺诈产品,内容安全保护,接口安全保护,智能验证码,设备指纹,IP画像,注册登录保护,支付安全保护,营销活动保护\" />\n          <meta name=\"description\" content=\"同盾科技反欺诈安全服务，为企业提供业务安全/内容安全/风控数据及风控工具，涉及的业务场景包括：注册登录保护/内容安全检测过滤/接口安全保护/交易支付保护/内容安全检测过滤等。\" />\n        </Head>\n        <Component {...pageProps} />\n      </Layout>\n    </Provider>);\n  }\n}\n\nexport default withReduxStore(InitApp);\n"]},"metadata":{},"sourceType":"module"}