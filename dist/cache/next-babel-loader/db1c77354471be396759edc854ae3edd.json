{"ast":null,"code":"var __jsx = React.createElement;\nimport App from 'next/app';\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport PcLayout from \"../components/layout\";\nimport commProps from \"./common/commProps\";\n\nconst debug = require('debug')('app:App');\n\nclass Layout extends Component {\n  render() {\n    const {\n      children\n    } = this.props;\n    return __jsx(PcLayout, null, children);\n  }\n\n}\n\nclass InitApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    /**\n     * 进入匹配的路由组件，判断是服务端渲染还是客户端渲染\n     * 组件的公共数据往后透传_document和对应的app\n     * 命令路由的组件和app之间共享props\n     * 如果页面有getInitialProps函数，要先执行页面的getInitialProps，然后当做pageProps传递给页面\n     */\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    if (ctx && !ctx.req) {\n      //客户端执行\n      debug('Exce In %s', 'client');\n    } else {\n      //服务端执行\n      debug('Exce In is %s', 'server');\n    }\n    /**\n     * 公共属性获取\n     * @type {string}\n     */\n\n\n    const {\n      isMobile\n    } = commProps(ctx);\n    pageProps.isMobile = isMobile;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props; // Component代指页面组件，就是pages下面的页面组件，将getInitialProps中pageProps传递给每个页面\n\n    return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", null, \"Demo\"), __jsx(\"meta\", {\n      name: \"keywords\",\n      content: \"Demo\"\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"Demo\"\n    })), __jsx(Component, pageProps));\n  }\n\n}\n\nexport default InitApp;","map":null,"metadata":{},"sourceType":"module"}