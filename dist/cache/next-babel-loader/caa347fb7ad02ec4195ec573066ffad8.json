{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/yun.zhao/workspace/with-polyfills/pages/_app.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App, { Container } from 'next/app';\nimport React, { Component } from 'react';\nimport PcLayout from \"../components/layout\";\nimport commProps from \"./common/commProps\";\n\nvar debug = require('debug')('app:App');\n\nvar Layout = /*#__PURE__*/function (_Component) {\n  _inherits(Layout, _Component);\n\n  var _super = _createSuper(Layout);\n\n  function Layout() {\n    _classCallCheck(this, Layout);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Layout, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return __jsx(PcLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, children);\n    }\n  }]);\n\n  return Layout;\n}(Component);\n\nvar InitApp = /*#__PURE__*/function (_App) {\n  _inherits(InitApp, _App);\n\n  var _super2 = _createSuper(InitApp);\n\n  function InitApp() {\n    _classCallCheck(this, InitApp);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(InitApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps; // Component代指页面组件，就是pages下面的页面组件，将getInitialProps中pageProps传递给每个页面\n\n      return __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, router, ctx, pageProps, _commProps, isMobile;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n\n                /**\n                 * 进入匹配的路由组件，判断是服务端渲染还是客户端渲染\n                 * 组件的公共数据往后透传_document和对应的app\n                 * 命令路由的组件和app之间共享props\n                 * 如果页面有getInitialProps函数，要先执行页面的getInitialProps，然后当做pageProps传递给页面\n                 */\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                if (ctx && !ctx.req) {\n                  //客户端执行\n                  debug('Exce In %s', 'client');\n                } else {\n                  //服务端执行\n                  debug('Exce In is %s', 'server');\n                }\n                /**\n                 * 公共属性获取\n                 * @type {string}\n                 */\n\n\n                _commProps = commProps(ctx), isMobile = _commProps.isMobile;\n                pageProps.isMobile = isMobile;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return InitApp;\n}(App);\n\nexport default InitApp;","map":{"version":3,"sources":["/Users/yun.zhao/workspace/with-polyfills/pages/_app.jsx"],"names":["App","Container","React","Component","PcLayout","commProps","debug","require","Layout","children","props","InitApp","pageProps","router","ctx","getInitialProps","req","isMobile"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,SAAjB,CAAd;;IAEMC,M;;;;;;;;;;;;;6BACK;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEP,aAAQ,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWA,QAAX,CAAR;AACD;;;;EAJkBN,S;;IAOfQ,O;;;;;;;;;;;;;6BAiCK;AAAA,wBAC0B,KAAKD,KAD/B;AAAA,UACCP,SADD,eACCA,SADD;AAAA,UACYS,SADZ,eACYA,SADZ,EAGP;;AACA,aAAQ,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADI,CAAR;AAKD;;;;;;;;;;;AAzC8BT,gBAAAA,S,QAAAA,S,EAAWU,M,QAAAA,M,EAAQC,G,QAAAA,G;;AAChD;;;;;;AAMIF,gBAAAA,S,GAAY,E;;qBAEZT,SAAS,CAACY,e;;;;;;uBACMZ,SAAS,CAACY,eAAV,CAA0BD,GAA1B,C;;;AAAlBF,gBAAAA,S;;;AAGF,oBAAIE,GAAG,IAAI,CAACA,GAAG,CAACE,GAAhB,EAAqB;AACnB;AACAV,kBAAAA,KAAK,CAAC,YAAD,EAAe,QAAf,CAAL;AACD,iBAHD,MAGO;AACL;AACAA,kBAAAA,KAAK,CAAC,eAAD,EAAkB,QAAlB,CAAL;AACD;AAED;;;;;;6BAIqBD,SAAS,CAACS,GAAD,C,EAAtBG,Q,cAAAA,Q;AAERL,gBAAAA,SAAS,CAACK,QAAV,GAAqBA,QAArB;iDAEO;AAAEL,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EA9BWZ,G;;AA6CtB,eAAeW,OAAf","sourcesContent":["import App, {Container} from 'next/app';\nimport React, { Component } from 'react';\nimport PcLayout from 'components/layout';\nimport commProps from './common/commProps';\n\nconst debug = require('debug')('app:App');\n\nclass Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (<PcLayout>{children}</PcLayout>);\n  }\n}\n\nclass InitApp extends App {\n  static async getInitialProps({ Component, router, ctx }) {\n    /**\n     * 进入匹配的路由组件，判断是服务端渲染还是客户端渲染\n     * 组件的公共数据往后透传_document和对应的app\n     * 命令路由的组件和app之间共享props\n     * 如果页面有getInitialProps函数，要先执行页面的getInitialProps，然后当做pageProps传递给页面\n     */\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    if (ctx && !ctx.req) {\n      //客户端执行\n      debug('Exce In %s', 'client');\n    } else {\n      //服务端执行\n      debug('Exce In is %s', 'server');\n    }\n\n    /**\n     * 公共属性获取\n     * @type {string}\n     */\n    const { isMobile } = commProps(ctx);\n\n    pageProps.isMobile = isMobile;\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    // Component代指页面组件，就是pages下面的页面组件，将getInitialProps中pageProps传递给每个页面\n    return (<Container>\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </Container>);\n  }\n}\n\nexport default InitApp;\n"]},"metadata":{},"sourceType":"module"}