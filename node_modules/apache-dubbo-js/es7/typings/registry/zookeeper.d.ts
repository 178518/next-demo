import { IDubboRegistryProps, IZkClientProps } from '../types';
import Registry from './registry';
export declare class ZkRegistry extends Registry<IZkClientProps & IDubboRegistryProps> {
    constructor(props: IZkClientProps & IDubboRegistryProps);
    private _checkTimer;
    private _client;
    private _init;
    /**
     * 重连
     */
    private _reconnect;
    /**
     * 由于zk自己的监测机制不明确, 改为自主检测
     */
    private _monitor;
    /**
     * 获取所有的负载列表，通过agentAddrMap聚合出来
     * 这样有点Reactive的感觉，不需要考虑当中增加删除的动作
     */
    private readonly _allAgentAddrSet;
    /**
     * 获取所有的provider列表
     * @param {string} dubboServicePath
     * @param dubboInterface
     * @returns {Promise<Array<string>>}
     * @private
     */
    private _getDubboServiceUrls;
    /**
     * connect zookeeper
     */
    private _connect;
    private _watchWrap;
    private _getChildren;
    /**
     * com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry
     */
    private _createConsumer;
    private _createRootConsumer;
    private _create;
    private _exists;
}
export default function zk(props: IZkClientProps): (dubboProps: IDubboRegistryProps) => ZkRegistry;
