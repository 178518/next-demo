import { LoggerOption } from './gelfMessageFactory';
import { Options } from 'generic-pool';
export interface SenderHook {
    type: string;
    hooks: Function[];
}
export declare type PoolOptions = Options;
export interface SenderOption extends LoggerOption {
    graylogHost: string;
    graylogPort: string | number;
    level: string;
    console?: boolean;
    hooks?: SenderHook[];
    pool?: PoolOptions;
}
export default class GelfUDPBalanceSender {
    private options;
    private gelfMessageFactory;
    private factory;
    private pool;
    private aliveNodes;
    private aliveUrl;
    private version;
    constructor(options: SenderOption);
    polling(): Promise<boolean | undefined>;
    keepAlive(): Promise<void>;
    sendMessage(msg: any, level: string, ...args: Array<any>): Promise<void>;
}
