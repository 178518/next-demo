"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var gelfUDPBalanceSender_1 = require("./gelfUDPBalanceSender");
__export(require("./gelfUDPBalanceSender"));
var Logger = /** @class */ (function () {
    function Logger(options) {
        var _this = this;
        this.senderHooks = {};
        this.sender = new gelfUDPBalanceSender_1.default(options);
        if (Array.isArray(options.hooks) && options.hooks.length) {
            options.hooks.forEach(function (h) {
                var _a;
                var logType = h.type;
                var hooks = h.hooks;
                if (!_this.senderHooks[logType]) {
                    _this.senderHooks[logType] = [];
                }
                (_a = _this.senderHooks[logType]).push.apply(_a, hooks);
            });
        }
    }
    Logger.prototype.log = function (msg, level) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        var _a;
        (_a = this.sender).sendMessage.apply(_a, [msg, level || 'info'].concat(args));
        this.hook(level, [msg].concat(args));
    };
    Logger.prototype.info = function (msg) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.log.apply(this, [msg, 'info'].concat(args));
    };
    Logger.prototype.error = function (msg) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.log.apply(this, [msg, 'error'].concat(args));
    };
    Logger.prototype.debug = function (msg) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.log.apply(this, [msg, 'debug'].concat(args));
    };
    Logger.prototype.warn = function (msg) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.log.apply(this, [msg, 'warn'].concat(args));
    };
    Logger.prototype.critical = function (msg) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.log.apply(this, [msg, 'critical'].concat(args));
    };
    Logger.prototype.hook = function (type, args) {
        if (this.senderHooks[type]) {
            this.senderHooks[type].forEach(function (hookAction) {
                hookAction.apply(void 0, args);
            });
        }
    };
    return Logger;
}());
exports.Logger = Logger;
var globalConfig = {};
var defaultConfig = {
    graylogHost: '127.0.0.1',
    graylogPort: 80,
    level: 'info'
};
var loggerCache = {};
var LoggerFactory = {
    globalConfig: function (config) {
        Object.assign(globalConfig, defaultConfig, config);
    },
    getLogger: function (logger, config) {
        if (!loggerCache[logger]) {
            loggerCache[logger] = new Logger(Object.assign({}, defaultConfig, globalConfig, config, { logger: logger }));
        }
        return loggerCache[logger];
    }
};
exports.default = LoggerFactory;
module.exports = LoggerFactory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwrREFBNEU7QUFFNUUsNENBQXVDO0FBRXZDO0lBSUUsZ0JBQVksT0FBcUI7UUFBakMsaUJBWUM7UUFmTyxnQkFBVyxHQUFrQyxFQUFFLENBQUM7UUFJdEQsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLDhCQUFvQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDeEQsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBQSxDQUFDOztnQkFDckIsSUFBTSxPQUFPLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDdkIsSUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQztnQkFDdEIsSUFBSSxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLEVBQUU7b0JBQzlCLEtBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDO2lCQUNoQztnQkFDRCxDQUFBLEtBQUEsS0FBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQSxDQUFDLElBQUksV0FBSSxLQUFLLEVBQUU7WUFDM0MsQ0FBQyxDQUFDLENBQUM7U0FDSjtJQUNILENBQUM7SUFFRCxvQkFBRyxHQUFILFVBQUksR0FBUSxFQUFFLEtBQWE7UUFBRSxjQUFtQjthQUFuQixVQUFtQixFQUFuQixxQkFBbUIsRUFBbkIsSUFBbUI7WUFBbkIsNkJBQW1COzs7UUFDOUMsQ0FBQSxLQUFBLElBQUksQ0FBQyxNQUFNLENBQUEsQ0FBQyxXQUFXLFlBQUMsR0FBRyxFQUFFLEtBQUssSUFBSSxNQUFNLFNBQUssSUFBSSxHQUFFO1FBQ3ZELElBQUksQ0FBQyxJQUFJ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