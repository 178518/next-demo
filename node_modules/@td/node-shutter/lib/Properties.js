"use strict";
/// <reference path="../typings/index.d.ts" />
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var node_fetch_1 = require("node-fetch");
var crypto = require("crypto");
var Parser = require("properties");
var _ = require("lodash");
var path = require("path");
var fs = require("fs");
var constant_1 = require("./constant");
function noop() { }
var Properties = /** @class */ (function () {
    function Properties(options) {
        this.app = options.app;
        this.config = options.config;
        this.locations = options.locations;
        this.properties = {};
    }
    Properties.prototype.getRemoteUrl = function (location) {
        return "app=" + this.app + "&env=" + this.config.environment + "&group=" + this.config.group + "&key=" + location;
    };
    Properties.prototype.getProperty = function (key) {
        return this.properties[key];
    };
    Properties.prototype.setProperty = function (key, value) {
        this.properties[key] = value;
    };
    Properties.prototype.observer = function () {
        var _this = this;
        var hosts = this.config.hostList.split(',');
        var domain = "http://" + hosts[0] + "/v2/api/config/observer";
        var timestamp = Math.floor(new Date().getTime() / 1000);
        var requestBody = this.locations.map(function (location) { return ({
            app: _this.app,
            group: _this.config.group,
            key: location,
            hash: _this.hash,
            type: 0,
            ts: timestamp
        }); });
        return node_fetch_1.default(domain, {
            method: 'POST',
            body: JSON.stringify(requestBody),
            headers: __assign({ 'Content-Type': 'application/json' }, this.getQueryHeaders('', timestamp)),
            timeout: constant_1.OBSERVER_TIMEOUT
        })
            .then(function (res) { return res.json(); })
            .then(function (res) {
            if (res.success && res.data && res.data.length) {
                return _this.fetchData();
            }
        }).catch(function (e) {
            if (e.type !== 'request-timeout') {
                console.log('observer fetch error：', e);
            }
        }).then(function () {
            _this.watch(_this.watchHandle);
        });
    };
    Properties.prototype.watch = function (handle) {
        var _this = this;
        this.watchHandle = handle;
        setTimeout(function () {
            _this.observer();
        }, this.config.watchIntervalTime || 30000); // 默认30s请求一次
    };
    Properties.prototype.getCacheFilePath = function (location) {
        var app = this.app;
        var portalApplication = this.config.application;
        if (!fs.existsSync(constant_1.CACHE_DIR)) {
            fs.mkdir(constant_1.CACHE_DIR, noop);
        }
        var cacheFilePath = path.resolve(constant_1.CACHE_DIR, portalApplication + "~" + app + "~" + location);
        return cacheFilePath;
    };
    Properties.prototype.cacheFile = function (text, location) {
        var cacheFilePath = this.getCacheFilePath(location);
        fs.writeFile(cacheFilePath, text, noop);
    };
    Properties.prototype.readCacheFile = function (location) {
        var cacheFilePath = this.getCacheFilePath(location);
        if (fs.existsSync(cacheFilePath)) {
            return fs.readFileSync(cacheFilePath, 'utf8');
        }
        return '';
    };
    Properties.prototype.parseToAssign = function (text) {
        var _this = this;
        return new Promise(function (resolve) {
            Parser.parse(text, {}, function (err, obj) {
                console.log(text);
                if (err) {
                    console.log(err);
                    resolve(false);
                    return;
                }
                Object.assign(_this.properties, obj);
                resolve(true);
            });
        });
    };
    Properties.prototype.getQueryHeaders = function (plainText, timestamp) {
        var _a = this.config, AccessKey = _a.AccessKey, SecretKey = _a.SecretKey, application = _a.application;
        var ts = "" + timestamp + SecretKey;
        var stringToSign = !!plainText ? plainText + "&ts=" + ts : "ts=" + ts;
        var md5Hash = crypto.createHash('md5').update(stringToSign).digest('hex');
        return {
            'X-App-Id': application,
            'X-Access-Key': AccessKey,
            'X-Signature-Time': timestamp,
            'Authorization': md5Hash
        };
    };
    Properties.prototype.fetchData = function () {
        var _this = this;
        var promises = this.locations.map(function (location) {
            var timestamp = Math.floor(new Date().getTime() / 1000);
            var hosts = _this.config.hostList.split(',');
            var domain = "http://" + hosts[0] + "/v2/api/config/file";
            var remoteUrl = _this.getRemoteUrl(location);
            var queryHeaders = _this.getQueryHeaders(remoteUrl, timestamp);
            return node_fetch_1.default(domain + "?" + remoteUrl, {
                headers: queryHeaders
            })
                .then(function (res) {
                _this.hash = res.headers.get('X-Content-Hash');
                return res.buffer();
            })
                .then(function (buffer) { return buffer.toString(); })
                .then(function (res) { return new Promise(function (resolve, reject) {
                try {
                    var data = JSON.parse(res);
                    if (data && data.success === false) {
                        reject(new Error('get shutter file error'));
                        return;
                    }
                    resolve(res);
                }
                catch (e) {
                    resolve(res);
                }
            }); })
                .then(function (text) {
                _this.cacheFile(text, location);
                return _this.parseToAssign(text);
            }).catch(function () {
                var text = _this.readCacheFile(location);
                if (!text)
                    return false;
                return _this.parseToAssign(text);
            });
        });
        return Promise.all(promises)
            .then(function (results) { return results.findIndex(function (flag) { return !flag; }) !== -1; })
            .catch(function (e) { return console.log(e); });
    };
    Properties.prototype.getApp = function () {
        return this.app;
    };
    Properties.prototype.getLocations = function () {
        return this.locations;
    };
    Properties.prototype.addLocations = function (locations) {
        this.locations = _.uniq(this.locations.concat(locations));
    };
    return Properties;
}());
exports.Properties = Properties;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvcGVydGllcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Qcm9wZXJ0aWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSw4Q0FBOEM7Ozs7Ozs7Ozs7QUFHOUMseUNBQStCO0FBQy9CLCtCQUFpQztBQUNqQyxtQ0FBcUM7QUFDckMsMEJBQTRCO0FBQzVCLDJCQUE2QjtBQUM3Qix1QkFBeUI7QUFDekIsdUNBQXlEO0FBRXpELGtCQUFpQixDQUFDO0FBUWxCO0lBUUUsb0JBQVksT0FBb0I7UUFDOUIsSUFBSSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUM3QixJQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFDbkMsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELGlDQUFZLEdBQVosVUFBYSxRQUFnQjtRQUMzQixPQUFPLFNBQU8sSUFBSSxDQUFDLEdBQUcsYUFBUSxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsZUFBVSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssYUFBUSxRQUFVLENBQUM7SUFDckcsQ0FBQztJQUVELGdDQUFXLEdBQVgsVUFBWSxHQUFXO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsZ0NBQVcsR0FBWCxVQUFZLEdBQVcsRUFBRSxLQUFVO1FBQ2pDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFFRCw2QkFBUSxHQUFSO1FBQUEsaUJBaUNDO1FBaENDLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM5QyxJQUFNLE1BQU0sR0FBRyxZ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